{"version":3,"sources":["components/Header/Header.js","components/Loader/Loader.js","components/ItemDetails/ItemDetails.js","components/SwapiServiceContext/SwapiServiceContext.js","components/hoc/withSwapiService.js","components/RandomPlanet/RandomPlanet.js","components/ItemsList/ItemsList.js","components/Row/Row.js","components/pages/Page.js","components/pages/PeoplePage.js","components/pages/PlanetsPage.js","components/pages/StarshipsPage.js","components/App/App.js","components/ErrorIndicator/ErrorIndicator.js","components/ErrorBoundry/ErrorBoundry.js","index.js","services/swapi-service.js"],"names":["Header","className","to","exact","Loader","Round","item","label","value","ItemDetailsContainer","state","loading","componentDidMount","window","innerWidth","addEventListener","itemDetails","document","getElementById","style","top","pageYOffset","onLoading","setState","prevProps","this","props","id","getData","then","name","form","renderDetails","undefined","children","Component","ItemDetails","src","alt","React","Children","map","child","cloneElement","createContext","SwapiServiceProvider","Provider","SwapiServiceConsumer","Consumer","withSwapiService","Wrapped","swapiService","RandomPlanet","updateId","randomId","Math","floor","random","interval","setInterval","clearTimeout","getPlanet","idx","key","ItemsListContainer","itemsList","next","loadingMore","updateItems","result","onItemSelect","getMore","items","renderContent","loadMore","viewLoadMore","CreateItem","onClick","LoadMore","type","ItemsList","Row","left","right","Page","getAllData","rounds","Items","Details","getPerson","getAllPeople","getAllPlanets","getStarship","getAllStarships","App","path","render","component","PeoplePage","PlanetsPage","StarshipsPage","ErrorIndicator","ErrorBoundry","hasError","_apiBase","getResource","url","a","fetch","res","ok","Error","status","json","_transformPerson","results","_transformStarship","_transformPlanet","data","person","match","height","eyeColor","eye_color","birthYear","birth_year","gender","planet","diameter","population","rotation","rotation_period","starship","model","cost","cost_in_credits","length","ReactDOM"],"mappings":"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","file":"static/js/main.2712dbad.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Header.css';\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <div className=\"logo\">\r\n                <Link to=\"/swapi/\" exact=\"true\">StarWarsApi</Link>\r\n            </div>\r\n            <div className=\"links\">\r\n                <Link to=\"/swapi/people\">People</Link>\r\n                <Link to=\"/swapi/planets\">Planets</Link>\r\n                <Link to=\"/swapi/starships\">Starships</Link>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './Loader.css';\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"lds-css\">\r\n            <div className=\"lds-double-ring\">\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loader;","import React, { Component, Fragment } from 'react';\r\nimport Loader from '../Loader/Loader';\r\nimport './ItemDetails.css';\r\n\r\nconst Round = ({ item, label, value }) => {\r\n    return <li className=\"list-group-item\">{label}: {item[value]}</li>;\r\n}\r\n\r\nexport {\r\n    Round\r\n}\r\n\r\nclass ItemDetailsContainer extends Component {\r\n\r\n    state = {\r\n        item: {},\r\n        loading: false\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        if( window.innerWidth > 767 ) {\r\n            window.addEventListener('scroll', function() {\r\n                const itemDetails = document.getElementById('item-details');\r\n                if( itemDetails ) {\r\n                    itemDetails.style.top = `${window.pageYOffset}px`;\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) { //shallComponentUpdate на деле использовать надо было\r\n        const { id ,getData } = this.props;\r\n        if( prevProps.id === id ) {\r\n            return false;\r\n        } else {\r\n            getData(id)\r\n                .then(this.setState({\r\n                    loading: true\r\n                }))\r\n                .then(item => this.setState({\r\n                    item,\r\n                    loading: false\r\n                }));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { item } = this.state;\r\n        const { id, name } = item;\r\n        const { form } = this.props;\r\n        const renderDetails = this.state.loading ? \r\n            <Loader /> : id === undefined ? \r\n            <span>Select the item</span> : \r\n            <ItemDetails \r\n                id={id} \r\n                name={name} \r\n                form={form} \r\n                item={item}\r\n                children={this.props.children} />\r\n        return (\r\n            <div id=\"item-details\" className=\"card item-details\">\r\n                { renderDetails }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    onLoading = () => {\r\n        this.setState({\r\n            loading: true\r\n        })\r\n    }\r\n\r\n}\r\n\r\nconst ItemDetails = ({ id, name, form, item, children }) => {\r\n    return (\r\n        <Fragment>\r\n            <img className=\"card-img-top\" src={`https://starwars-visualguide.com/assets/img/${form}/${id}.jpg`} alt={name} />\r\n            <div className=\"card-body\">\r\n                <h5 className=\"card-title\">{name}</h5>\r\n                <ul className=\"list-group list-group-flush\">\r\n                    {\r\n                        React.Children.map(children, (child) => {\r\n                            return React.cloneElement(child, { item })\r\n                        })\r\n                    }\r\n                </ul>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default ItemDetailsContainer;","import React from 'react';\r\n\r\nconst { \r\n    Provider: SwapiServiceProvider,\r\n    Consumer: SwapiServiceConsumer \r\n} = React.createContext();\r\n\r\nexport {\r\n    SwapiServiceProvider,\r\n    SwapiServiceConsumer\r\n};","import React from 'react';\r\nimport { SwapiServiceConsumer } from './../SwapiServiceContext/SwapiServiceContext';\r\n\r\nconst withSwapiService = () => (Wrapped) => {\r\n    return (props) => {\r\n        return (\r\n            <SwapiServiceConsumer>\r\n                {\r\n                    (swapiService) => {\r\n                        return <Wrapped {...props} swapiService={swapiService} />\r\n                    }\r\n                }\r\n            </SwapiServiceConsumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withSwapiService;","import React, { Component } from 'react';\r\nimport ItemDetails, { Round } from './../ItemDetails/ItemDetails';\r\nimport withSwapiService from './../hoc/withSwapiService';\r\n\r\nclass RandomPlanet extends Component {\r\n\r\n    state = {\r\n        id: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.updateId();\r\n        this.interval = setInterval( this.updateId, 5000 );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.interval);\r\n    }\r\n\r\n    render() {\r\n        const { getPlanet } = this.props.swapiService;\r\n        const rounds = [\r\n            { label: \"Diameter\", value: \"diameter\" },\r\n            { label: \"Population\", value: \"population\" },\r\n            { label: \"Rotation period\", value: \"rotation\" }\r\n        ];\r\n\r\n        return(\r\n            <ItemDetails id={this.state.id} getData={getPlanet} form={\"planets\"} >\r\n                {\r\n                    rounds.map(({ label, value }, idx) => {\r\n                        return <Round key={idx} label={label} value={value} />\r\n                    })\r\n                }\r\n            </ItemDetails>\r\n        ); \r\n    }\r\n\r\n    updateId = () => {\r\n        const randomId = Math.floor(Math.random()*25)+3;\r\n        this.setState({\r\n            id: randomId\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport default withSwapiService()(RandomPlanet);","import React, { Component } from 'react';\r\nimport Loader from './../Loader/Loader';\r\nimport withSwapiService from './../hoc/withSwapiService';\r\nimport './ItemsList.css';\r\n\r\nclass ItemsListContainer extends Component {\r\n\r\n    state = {\r\n        itemsList: [],\r\n        loading: true,\r\n        next: null,\r\n        loadingMore: true\r\n    };\r\n\r\n    componentDidMount() {\r\n        const { getData } = this.props;\r\n        this.updateItems(getData);\r\n    }\r\n\r\n    render() {\r\n        const { itemsList, loading, next, loadingMore } = this.state;\r\n        const { onItemSelect, getMore } = this.props;\r\n        const items = itemsList.map(({ id, name }) => {\r\n            return <CreateItem key={id} id={id} name={name} onItemSelect={onItemSelect} />;\r\n        });\r\n        const renderContent = loading ? <Loader /> : items;\r\n        const loadMore = <LoadMore updateItems={this.updateItems} getMore={getMore} loadingMore={loadingMore} />;\r\n        const viewLoadMore = next === null ? null : loadMore;\r\n        return (\r\n            <ItemsList renderContent={renderContent} viewLoadMore={viewLoadMore} />\r\n        );\r\n    }\r\n\r\n    updateItems = (getData) => {\r\n        const { itemsList, next } = this.state;\r\n        getData(next)\r\n            .then(this.setState({\r\n                loadingMore: true\r\n            }))\r\n            .then(({result, next}) => {\r\n                this.setState({\r\n                    itemsList: [...itemsList, ...result],\r\n                    loading: false,\r\n                    next: next,\r\n                    loadingMore: false\r\n                })\r\n            });\r\n    }\r\n\r\n}\r\n\r\nconst CreateItem = ({ id, name, onItemSelect }) => {\r\n    return (\r\n        <li\r\n            className=\"list-group-item\"\r\n            onClick={() => onItemSelect(id)}>\r\n            {name} ({id})\r\n        </li>\r\n    )\r\n}\r\n\r\nconst LoadMore = ({ updateItems, getMore, loadingMore }) => {\r\n    return(\r\n        <button \r\n            type=\"button\" \r\n            className=\"btn btn-primary btn_loadmore\"\r\n            onClick={() => updateItems(getMore)}>\r\n            {\r\n                loadingMore ? <Loader /> : \"Load More\" \r\n            }\r\n        </button>\r\n    )\r\n}\r\n\r\nconst ItemsList = ({ renderContent, viewLoadMore }) => {\r\n    return(\r\n        <div className=\"card items-list\">\r\n            <ul className=\"list-group list-group-flush\">\r\n                { renderContent }\r\n            </ul>\r\n            { viewLoadMore }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withSwapiService()(ItemsListContainer);","import React, { Component } from 'react';\r\n\r\nclass Row extends Component {\r\n\r\n    state = {\r\n        id: undefined\r\n    }\r\n\r\n    render() {\r\n        const { left, right } = this.props;\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-md-6 mb-3\">\r\n                    {\r\n                        React.cloneElement(left, { onItemSelect: this.onItemSelect })\r\n                    }\r\n                </div>\r\n                <div className=\"col-12 col-md-6 mb-3\">\r\n                    {\r\n                        React.cloneElement(right, { id: this.state.id })\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n    onItemSelect = (id) => {\r\n        this.setState({\r\n            id\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport default Row;","import React from 'react';\r\nimport ItemsList from './../ItemsList/ItemsList';\r\nimport ItemDetails, { Round } from './../ItemDetails/ItemDetails';\r\nimport Row from './../Row/Row';\r\n\r\nconst Page = ({ getData, getAllData, getMore, rounds, form }) => {\r\n\r\n    const Items = <ItemsList getData={getAllData} getMore={getMore} />;\r\n    const Details = \r\n        <ItemDetails getData={getData} form={form} >\r\n            {\r\n                rounds.map(({ label, value }, idx) => {\r\n                    return <Round key={idx} label={label} value={value} />\r\n                })\r\n            }\r\n        </ItemDetails>;\r\n\r\n    return (\r\n        <Row left={Items} right={Details} />\r\n    )\r\n}\r\n\r\nexport default Page;","import React from 'react';\r\nimport Page from './Page';\r\nimport withSwapiService from './../hoc/withSwapiService';\r\n\r\nconst PeoplePage = ({ swapiService }) => {\r\n    const {\r\n        getPerson,\r\n        getAllPeople,\r\n        getMore\r\n    } = swapiService;\r\n\r\n    const rounds = [\r\n        { label: \"Birth year\", value: \"birthYear\" },\r\n        { label: \"Eye color\", value: \"eyeColor\" },\r\n        { label: \"Gender\", value: \"gender\" },\r\n        { label: \"Height\", value: \"height\" }\r\n    ];\r\n\r\n    return <Page getData={getPerson} getAllData={getAllPeople} getMore={getMore} rounds={rounds} form={\"characters\"}  />\r\n}\r\n\r\nexport default withSwapiService()(PeoplePage);","import React from 'react';\r\nimport Page from './Page';\r\nimport withSwapiService from './../hoc/withSwapiService';\r\n\r\nconst PlanetsPage = ({ swapiService }) => {\r\n    const {\r\n        getPlanet,\r\n        getAllPlanets,\r\n        getMore\r\n    } = swapiService;\r\n\r\n    const rounds = [\r\n        { label: \"Diameter\", value: \"diameter\" },\r\n        { label: \"Population\", value: \"population\" },\r\n        { label: \"Rotation period\", value: \"rotation\" }\r\n    ];\r\n\r\n    return <Page getData={getPlanet} getAllData={getAllPlanets} getMore={getMore} rounds={rounds} form={\"planets\"}  />\r\n}\r\n\r\nexport default withSwapiService()(PlanetsPage);","import React from 'react';\r\nimport Page from './Page';\r\nimport withSwapiService from './../hoc/withSwapiService';\r\n\r\nconst StarshipsPage = ({ swapiService }) => {\r\n    const {\r\n        getStarship,\r\n        getAllStarships,\r\n        getMore\r\n    } = swapiService;\r\n\r\n    const rounds = [\r\n        { label: \"Model\", value: \"model\" },\r\n        { label: \"Cost\", value: \"cost\" },\r\n        { label: \"Length\", value: \"length\" }\r\n    ];\r\n\r\n    return <Page getData={getStarship} getAllData={getAllStarships} getMore={getMore} rounds={rounds} form={\"starships\"}  />\r\n}\r\n\r\nexport default withSwapiService()(StarshipsPage);","import React from 'react';\r\nimport Header from './../Header/Header';\r\nimport RandomPlanet from './../RandomPlanet/RandomPlanet';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport {\r\n    PeoplePage,\r\n    PlanetsPage,\r\n    StarshipsPage\r\n} from './../pages';\r\n\r\nconst App = () => {\r\n    return(\r\n        <div className=\"container\">\r\n            <Header />\r\n            <Switch>\r\n                <Route path=\"/swapi\" render={\r\n                    () => {\r\n                        return (\r\n                            <div>\r\n                                <h1>Welcome to StarWars Api Service</h1>\r\n                                <RandomPlanet />  \r\n                            </div>      \r\n                        )\r\n                    }\r\n                } exact />\r\n                <Route path=\"/swapi/people\" component={PeoplePage} />\r\n                <Route path=\"/swapi/planets\" component={PlanetsPage} />\r\n                <Route path=\"/swapi/starships\" component={StarshipsPage} />\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\r\n\r\nconst ErrorIndicator = () => {\r\n    return (\r\n        <div>\r\n            Error!!!\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ErrorIndicator;","import React, { Component } from 'react';\r\nimport ErrorIndicator from './../ErrorIndicator/ErrorIndicator';\r\n\r\nexport default class ErrorBoundry extends Component {\r\n\r\n    state = {\r\n        hasError: false\r\n    };\r\n\r\n    componentDidCatch() {\r\n        this.setState({\r\n            hasError: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        if( this.state.hasError ) {\r\n            return <ErrorIndicator />\r\n        }\r\n        \r\n        return this.props.children;\r\n    }\r\n\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport SwapiService from './services/swapi-service';\n\nimport App from './components/App/App';\nimport { SwapiServiceProvider } from './components/SwapiServiceContext/SwapiServiceContext';\nimport ErrorBoundry from './components/ErrorBoundry/ErrorBoundry';\n\nconst swapiService = new SwapiService();\n\nReactDOM.render(<ErrorBoundry>\n                    <SwapiServiceProvider value={swapiService}>\n                        <Router>\n                            <App />\n                        </Router>\n                    </SwapiServiceProvider>\n                </ErrorBoundry>\n    , document.getElementById('root'));","export default class SwapiService {\r\n\r\n    _apiBase = 'https://swapi.co/api';\r\n\r\n    getResource = async (url) => {\r\n        const res = await fetch(`${this._apiBase}${url}`);\r\n\r\n        if (!res.ok) {\r\n            throw new Error(`Could not fetch ${url}` +\r\n            `, received ${res.status}`)\r\n        }\r\n        return await res.json();\r\n    }\r\n\r\n    getPerson = async (id) => {\r\n        const result = await this.getResource(`/people/${id}`);\r\n        return this._transformPerson(result);\r\n    }\r\n\r\n    getAllPeople = async () => {\r\n        const result = await this.getResource('/people/');\r\n        return {\r\n            result: result.results.map(this._transformPerson),\r\n            next: result.next\r\n        };\r\n    }\r\n\r\n    getStarship = async (id) => {\r\n        const result = await this.getResource(`/starships/${id}`);\r\n        return this._transformStarship(result);\r\n    }\r\n\r\n    getAllStarships = async () => {\r\n        const result = await this.getResource('/starships/');\r\n        return {\r\n            result: result.results.map(this._transformStarship),\r\n            next: result.next\r\n        };\r\n    }\r\n\r\n    getPlanet = async (id) => {\r\n        const result = await this.getResource(`/planets/${id}`);\r\n        return this._transformPlanet(result);\r\n    }\r\n\r\n    getAllPlanets = async () => {\r\n        const result = await this.getResource('/planets/');\r\n        return {\r\n            result: result.results.map(this._transformPlanet),\r\n            next: result.next\r\n        };\r\n    }\r\n\r\n    getMore = async (next) => {\r\n        const data = await fetch(next);\r\n        const res = await data.json();\r\n        return {\r\n            result: await res.results.map(this._transformPlanet),\r\n            next: await res.next\r\n        };\r\n    }\r\n\r\n    _transformPerson = (person) => {\r\n        return {\r\n            id: person.url.match(/(\\d+)/)[1],\r\n            name: person.name,\r\n            height: person.height,\r\n            eyeColor: person.eye_color,\r\n            birthYear: person.birth_year,\r\n            gender: person.gender\r\n        }\r\n    }\r\n\r\n    _transformPlanet = (planet) => {\r\n        return {\r\n            id: planet.url.match(/(\\d+)/)[1],\r\n            name: planet.name,\r\n            diameter: planet.diameter,\r\n            population: planet.population,\r\n            rotation: planet.rotation_period\r\n        }\r\n    }\r\n\r\n    _transformStarship = (starship) => {\r\n        return {\r\n            id: starship.url.match(/(\\d+)/)[1],\r\n            name: starship.name,\r\n            model: starship.model,\r\n            cost: starship.cost_in_credits,\r\n            length: starship.length\r\n        }\r\n    }\r\n\r\n}"],"sourceRoot":""}